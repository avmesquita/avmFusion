//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Impeto.Exchange.SalaDeReuniao.svcExchange {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResultadoDisponibilidadeSalaReuniao", Namespace="http://schemas.datacontract.org/2004/07/Impeto.Framework.Exchange.Models")]
    [System.SerializableAttribute()]
    public partial class ResultadoDisponibilidadeSalaReuniao : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string Mensagemk__BackingFieldField;
        
        private string Nomek__BackingFieldField;
        
        private string Smtpk__BackingFieldField;
        
        private Impeto.Exchange.SalaDeReuniao.svcExchange.Status Statusk__BackingFieldField;
        
        private Impeto.Exchange.SalaDeReuniao.svcExchange.MeetingAttendeeType Tipok__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Mensagem>k__BackingField", IsRequired=true)]
        public string Mensagemk__BackingField {
            get {
                return this.Mensagemk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Mensagemk__BackingFieldField, value) != true)) {
                    this.Mensagemk__BackingFieldField = value;
                    this.RaisePropertyChanged("Mensagemk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Nome>k__BackingField", IsRequired=true)]
        public string Nomek__BackingField {
            get {
                return this.Nomek__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Nomek__BackingFieldField, value) != true)) {
                    this.Nomek__BackingFieldField = value;
                    this.RaisePropertyChanged("Nomek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Smtp>k__BackingField", IsRequired=true)]
        public string Smtpk__BackingField {
            get {
                return this.Smtpk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Smtpk__BackingFieldField, value) != true)) {
                    this.Smtpk__BackingFieldField = value;
                    this.RaisePropertyChanged("Smtpk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Status>k__BackingField", IsRequired=true)]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.Status Statusk__BackingField {
            get {
                return this.Statusk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Statusk__BackingFieldField, value) != true)) {
                    this.Statusk__BackingFieldField = value;
                    this.RaisePropertyChanged("Statusk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Tipo>k__BackingField", IsRequired=true)]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.MeetingAttendeeType Tipok__BackingField {
            get {
                return this.Tipok__BackingFieldField;
            }
            set {
                if ((this.Tipok__BackingFieldField.Equals(value) != true)) {
                    this.Tipok__BackingFieldField = value;
                    this.RaisePropertyChanged("Tipok__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Impeto.Framework.Exchange.Models")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Impeto.Exchange.SalaDeReuniao.svcExchange.CalendarioEvento[] ListaEventosk__BackingFieldField;
        
        private string Mensagemk__BackingFieldField;
        
        private Impeto.Exchange.SalaDeReuniao.svcExchange.StatusDisponibilidade StatusDisponibilidadek__BackingFieldField;
        
        private System.Nullable<System.DateTime> SugestaoProximaReuniaok__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<ListaEventos>k__BackingField", IsRequired=true)]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.CalendarioEvento[] ListaEventosk__BackingField {
            get {
                return this.ListaEventosk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaEventosk__BackingFieldField, value) != true)) {
                    this.ListaEventosk__BackingFieldField = value;
                    this.RaisePropertyChanged("ListaEventosk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Mensagem>k__BackingField", IsRequired=true)]
        public string Mensagemk__BackingField {
            get {
                return this.Mensagemk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Mensagemk__BackingFieldField, value) != true)) {
                    this.Mensagemk__BackingFieldField = value;
                    this.RaisePropertyChanged("Mensagemk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StatusDisponibilidade>k__BackingField", IsRequired=true)]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.StatusDisponibilidade StatusDisponibilidadek__BackingField {
            get {
                return this.StatusDisponibilidadek__BackingFieldField;
            }
            set {
                if ((this.StatusDisponibilidadek__BackingFieldField.Equals(value) != true)) {
                    this.StatusDisponibilidadek__BackingFieldField = value;
                    this.RaisePropertyChanged("StatusDisponibilidadek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<SugestaoProximaReuniao>k__BackingField", IsRequired=true)]
        public System.Nullable<System.DateTime> SugestaoProximaReuniaok__BackingField {
            get {
                return this.SugestaoProximaReuniaok__BackingFieldField;
            }
            set {
                if ((this.SugestaoProximaReuniaok__BackingFieldField.Equals(value) != true)) {
                    this.SugestaoProximaReuniaok__BackingFieldField = value;
                    this.RaisePropertyChanged("SugestaoProximaReuniaok__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MeetingAttendeeType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Exchange.WebServices.Data")]
    public enum MeetingAttendeeType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Organizer = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Required = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Optional = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Room = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resource = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarioEvento", Namespace="http://schemas.datacontract.org/2004/07/Impeto.Framework.Exchange.Models")]
    [System.SerializableAttribute()]
    public partial class CalendarioEvento : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private Impeto.Exchange.SalaDeReuniao.svcExchange.CalendarioEventoDetalhe Detailsk__BackingFieldField;
        
        private System.DateTime EndTimek__BackingFieldField;
        
        private Impeto.Exchange.SalaDeReuniao.svcExchange.StatusLegadoLivreOcupado FreeBusyStatusk__BackingFieldField;
        
        private System.DateTime StartTimek__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Details>k__BackingField", IsRequired=true)]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.CalendarioEventoDetalhe Detailsk__BackingField {
            get {
                return this.Detailsk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Detailsk__BackingFieldField, value) != true)) {
                    this.Detailsk__BackingFieldField = value;
                    this.RaisePropertyChanged("Detailsk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<EndTime>k__BackingField", IsRequired=true)]
        public System.DateTime EndTimek__BackingField {
            get {
                return this.EndTimek__BackingFieldField;
            }
            set {
                if ((this.EndTimek__BackingFieldField.Equals(value) != true)) {
                    this.EndTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("EndTimek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<FreeBusyStatus>k__BackingField", IsRequired=true)]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.StatusLegadoLivreOcupado FreeBusyStatusk__BackingField {
            get {
                return this.FreeBusyStatusk__BackingFieldField;
            }
            set {
                if ((this.FreeBusyStatusk__BackingFieldField.Equals(value) != true)) {
                    this.FreeBusyStatusk__BackingFieldField = value;
                    this.RaisePropertyChanged("FreeBusyStatusk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StartTime>k__BackingField", IsRequired=true)]
        public System.DateTime StartTimek__BackingField {
            get {
                return this.StartTimek__BackingFieldField;
            }
            set {
                if ((this.StartTimek__BackingFieldField.Equals(value) != true)) {
                    this.StartTimek__BackingFieldField = value;
                    this.RaisePropertyChanged("StartTimek__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusDisponibilidade", Namespace="http://schemas.datacontract.org/2004/07/Impeto.Framework.Exchange.Models")]
    public enum StatusDisponibilidade : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Desconhecido = -1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Livre = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ocupado = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Erro = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmReuniao = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmReuniao30 = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalendarioEventoDetalhe", Namespace="http://schemas.datacontract.org/2004/07/Impeto.Framework.Exchange.Models")]
    [System.SerializableAttribute()]
    public partial class CalendarioEventoDetalhe : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private bool IsExceptionk__BackingFieldField;
        
        private bool IsMeetingk__BackingFieldField;
        
        private bool IsPrivatek__BackingFieldField;
        
        private bool IsRecurringk__BackingFieldField;
        
        private bool IsReminderSetk__BackingFieldField;
        
        private string Locationk__BackingFieldField;
        
        private string StoreIdk__BackingFieldField;
        
        private string Subjectk__BackingFieldField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsException>k__BackingField", IsRequired=true)]
        public bool IsExceptionk__BackingField {
            get {
                return this.IsExceptionk__BackingFieldField;
            }
            set {
                if ((this.IsExceptionk__BackingFieldField.Equals(value) != true)) {
                    this.IsExceptionk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsExceptionk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsMeeting>k__BackingField", IsRequired=true)]
        public bool IsMeetingk__BackingField {
            get {
                return this.IsMeetingk__BackingFieldField;
            }
            set {
                if ((this.IsMeetingk__BackingFieldField.Equals(value) != true)) {
                    this.IsMeetingk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsMeetingk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsPrivate>k__BackingField", IsRequired=true)]
        public bool IsPrivatek__BackingField {
            get {
                return this.IsPrivatek__BackingFieldField;
            }
            set {
                if ((this.IsPrivatek__BackingFieldField.Equals(value) != true)) {
                    this.IsPrivatek__BackingFieldField = value;
                    this.RaisePropertyChanged("IsPrivatek__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsRecurring>k__BackingField", IsRequired=true)]
        public bool IsRecurringk__BackingField {
            get {
                return this.IsRecurringk__BackingFieldField;
            }
            set {
                if ((this.IsRecurringk__BackingFieldField.Equals(value) != true)) {
                    this.IsRecurringk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsRecurringk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<IsReminderSet>k__BackingField", IsRequired=true)]
        public bool IsReminderSetk__BackingField {
            get {
                return this.IsReminderSetk__BackingFieldField;
            }
            set {
                if ((this.IsReminderSetk__BackingFieldField.Equals(value) != true)) {
                    this.IsReminderSetk__BackingFieldField = value;
                    this.RaisePropertyChanged("IsReminderSetk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Location>k__BackingField", IsRequired=true)]
        public string Locationk__BackingField {
            get {
                return this.Locationk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Locationk__BackingFieldField, value) != true)) {
                    this.Locationk__BackingFieldField = value;
                    this.RaisePropertyChanged("Locationk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<StoreId>k__BackingField", IsRequired=true)]
        public string StoreIdk__BackingField {
            get {
                return this.StoreIdk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreIdk__BackingFieldField, value) != true)) {
                    this.StoreIdk__BackingFieldField = value;
                    this.RaisePropertyChanged("StoreIdk__BackingField");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Name="<Subject>k__BackingField", IsRequired=true)]
        public string Subjectk__BackingField {
            get {
                return this.Subjectk__BackingFieldField;
            }
            set {
                if ((object.ReferenceEquals(this.Subjectk__BackingFieldField, value) != true)) {
                    this.Subjectk__BackingFieldField = value;
                    this.RaisePropertyChanged("Subjectk__BackingField");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusLegadoLivreOcupado", Namespace="http://schemas.datacontract.org/2004/07/Impeto.Framework.Exchange.Models")]
    public enum StatusLegadoLivreOcupado : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Free = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Tentative = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Busy = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OOF = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WorkingElsewhere = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoData = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EmailAddress", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Exchange.WebServices.Data")]
    [System.SerializableAttribute()]
    public partial class EmailAddress : Impeto.Exchange.SalaDeReuniao.svcExchange.ComplexProperty {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Impeto.Exchange.SalaDeReuniao.svcExchange.ItemId IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<Impeto.Exchange.SalaDeReuniao.svcExchange.MailboxType> MailboxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoutingTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Impeto.Exchange.SalaDeReuniao.svcExchange.ItemId Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<Impeto.Exchange.SalaDeReuniao.svcExchange.MailboxType> MailboxType {
            get {
                return this.MailboxTypeField;
            }
            set {
                if ((this.MailboxTypeField.Equals(value) != true)) {
                    this.MailboxTypeField = value;
                    this.RaisePropertyChanged("MailboxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoutingType {
            get {
                return this.RoutingTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoutingTypeField, value) != true)) {
                    this.RoutingTypeField = value;
                    this.RaisePropertyChanged("RoutingType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ComplexProperty", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Exchange.WebServices.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Impeto.Exchange.SalaDeReuniao.svcExchange.ServiceId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Impeto.Exchange.SalaDeReuniao.svcExchange.ItemId))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress))]
    public partial class ComplexProperty : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ServiceId", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Exchange.WebServices.Data")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(Impeto.Exchange.SalaDeReuniao.svcExchange.ItemId))]
    public partial class ServiceId : Impeto.Exchange.SalaDeReuniao.svcExchange.ComplexProperty {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ItemId", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Exchange.WebServices.Data")]
    [System.SerializableAttribute()]
    public partial class ItemId : Impeto.Exchange.SalaDeReuniao.svcExchange.ServiceId {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MailboxType", Namespace="http://schemas.datacontract.org/2004/07/Microsoft.Exchange.WebServices.Data")]
    public enum MailboxType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unknown = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OneOff = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Mailbox = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicFolder = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PublicGroup = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ContactGroup = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contact = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcExchange.IImpetoExchangeService")]
    public interface IImpetoExchangeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniao", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoResponse" +
            "")]
        Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniao();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniao", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoResponse" +
            "")]
        System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "Response")]
        Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniaoTimeZone(string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "Response")]
        System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoTimeZoneAsync(string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFull", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFullRespons" +
            "e")]
        Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeTimeZoneFull(string email, string senha, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFull", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFullRespons" +
            "e")]
        System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeTimeZoneFullAsync(string email, string senha, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchange", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchangeResponse")]
        Impeto.Exchange.SalaDeReuniao.svcExchange.Status obterDisponibilidadeExchange(string email, string senha, string smtp, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchange", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchangeResponse")]
        System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.Status> obterDisponibilidadeExchangeAsync(string email, string senha, string smtp, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getBuildingRoomList", ReplyAction="http://tempuri.org/IImpetoExchangeService/getBuildingRoomListResponse")]
        Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[] getBuildingRoomList(string email, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getBuildingRoomList", ReplyAction="http://tempuri.org/IImpetoExchangeService/getBuildingRoomListResponse")]
        System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[]> getBuildingRoomListAsync(string email, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getRooms", ReplyAction="http://tempuri.org/IImpetoExchangeService/getRoomsResponse")]
        Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[] getRooms(string email, string senha, string smtpBuildingRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getRooms", ReplyAction="http://tempuri.org/IImpetoExchangeService/getRoomsResponse")]
        System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[]> getRoomsAsync(string email, string senha, string smtpBuildingRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImpetoExchangeServiceChannel : Impeto.Exchange.SalaDeReuniao.svcExchange.IImpetoExchangeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImpetoExchangeServiceClient : System.ServiceModel.ClientBase<Impeto.Exchange.SalaDeReuniao.svcExchange.IImpetoExchangeService>, Impeto.Exchange.SalaDeReuniao.svcExchange.IImpetoExchangeService {
        
        public ImpetoExchangeServiceClient() {
        }
        
        public ImpetoExchangeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImpetoExchangeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpetoExchangeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpetoExchangeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniao() {
            return base.Channel.obterDisponibilidadeSalaReuniao();
        }
        
        public System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoAsync() {
            return base.Channel.obterDisponibilidadeSalaReuniaoAsync();
        }
        
        public Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniaoTimeZone(string timeZone) {
            return base.Channel.obterDisponibilidadeSalaReuniaoTimeZone(timeZone);
        }
        
        public System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoTimeZoneAsync(string timeZone) {
            return base.Channel.obterDisponibilidadeSalaReuniaoTimeZoneAsync(timeZone);
        }
        
        public Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeTimeZoneFull(string email, string senha, string timeZone) {
            return base.Channel.obterDisponibilidadeTimeZoneFull(email, senha, timeZone);
        }
        
        public System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeTimeZoneFullAsync(string email, string senha, string timeZone) {
            return base.Channel.obterDisponibilidadeTimeZoneFullAsync(email, senha, timeZone);
        }
        
        public Impeto.Exchange.SalaDeReuniao.svcExchange.Status obterDisponibilidadeExchange(string email, string senha, string smtp, string timeZone) {
            return base.Channel.obterDisponibilidadeExchange(email, senha, smtp, timeZone);
        }
        
        public System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.Status> obterDisponibilidadeExchangeAsync(string email, string senha, string smtp, string timeZone) {
            return base.Channel.obterDisponibilidadeExchangeAsync(email, senha, smtp, timeZone);
        }
        
        public Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[] getBuildingRoomList(string email, string senha) {
            return base.Channel.getBuildingRoomList(email, senha);
        }
        
        public System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[]> getBuildingRoomListAsync(string email, string senha) {
            return base.Channel.getBuildingRoomListAsync(email, senha);
        }
        
        public Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[] getRooms(string email, string senha, string smtpBuildingRoom) {
            return base.Channel.getRooms(email, senha, smtpBuildingRoom);
        }
        
        public System.Threading.Tasks.Task<Impeto.Exchange.SalaDeReuniao.svcExchange.EmailAddress[]> getRoomsAsync(string email, string senha, string smtpBuildingRoom) {
            return base.Channel.getRoomsAsync(email, senha, smtpBuildingRoom);
        }
    }
}
