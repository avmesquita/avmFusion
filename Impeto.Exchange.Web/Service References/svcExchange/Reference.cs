//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Impeto.Exchange.Web.svcExchange {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="svcExchange.IImpetoExchangeService")]
    public interface IImpetoExchangeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniao", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoResponse" +
            "")]
        Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniao();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniao", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoResponse" +
            "")]
        System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "Response")]
        Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniaoTimeZone(string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeSalaReuniaoTimeZone" +
            "Response")]
        System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoTimeZoneAsync(string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFull", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFullRespons" +
            "e")]
        Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeTimeZoneFull(string email, string senha, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFull", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeTimeZoneFullRespons" +
            "e")]
        System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeTimeZoneFullAsync(string email, string senha, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchange", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchangeResponse")]
        Impeto.Framework.Exchange.Models.Status obterDisponibilidadeExchange(string email, string senha, string smtp, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchange", ReplyAction="http://tempuri.org/IImpetoExchangeService/obterDisponibilidadeExchangeResponse")]
        System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.Status> obterDisponibilidadeExchangeAsync(string email, string senha, string smtp, string timeZone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getBuildingRoomList", ReplyAction="http://tempuri.org/IImpetoExchangeService/getBuildingRoomListResponse")]
        Microsoft.Exchange.WebServices.Data.EmailAddress[] getBuildingRoomList(string email, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getBuildingRoomList", ReplyAction="http://tempuri.org/IImpetoExchangeService/getBuildingRoomListResponse")]
        System.Threading.Tasks.Task<Microsoft.Exchange.WebServices.Data.EmailAddress[]> getBuildingRoomListAsync(string email, string senha);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getRooms", ReplyAction="http://tempuri.org/IImpetoExchangeService/getRoomsResponse")]
        Microsoft.Exchange.WebServices.Data.EmailAddress[] getRooms(string email, string senha, string smtpBuildingRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpetoExchangeService/getRooms", ReplyAction="http://tempuri.org/IImpetoExchangeService/getRoomsResponse")]
        System.Threading.Tasks.Task<Microsoft.Exchange.WebServices.Data.EmailAddress[]> getRoomsAsync(string email, string senha, string smtpBuildingRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImpetoExchangeServiceChannel : Impeto.Exchange.Web.svcExchange.IImpetoExchangeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImpetoExchangeServiceClient : System.ServiceModel.ClientBase<Impeto.Exchange.Web.svcExchange.IImpetoExchangeService>, Impeto.Exchange.Web.svcExchange.IImpetoExchangeService {
        
        public ImpetoExchangeServiceClient() {
        }
        
        public ImpetoExchangeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImpetoExchangeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpetoExchangeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpetoExchangeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniao() {
            return base.Channel.obterDisponibilidadeSalaReuniao();
        }
        
        public System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoAsync() {
            return base.Channel.obterDisponibilidadeSalaReuniaoAsync();
        }
        
        public Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeSalaReuniaoTimeZone(string timeZone) {
            return base.Channel.obterDisponibilidadeSalaReuniaoTimeZone(timeZone);
        }
        
        public System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeSalaReuniaoTimeZoneAsync(string timeZone) {
            return base.Channel.obterDisponibilidadeSalaReuniaoTimeZoneAsync(timeZone);
        }
        
        public Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[] obterDisponibilidadeTimeZoneFull(string email, string senha, string timeZone) {
            return base.Channel.obterDisponibilidadeTimeZoneFull(email, senha, timeZone);
        }
        
        public System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.ResultadoDisponibilidadeSalaReuniao[]> obterDisponibilidadeTimeZoneFullAsync(string email, string senha, string timeZone) {
            return base.Channel.obterDisponibilidadeTimeZoneFullAsync(email, senha, timeZone);
        }
        
        public Impeto.Framework.Exchange.Models.Status obterDisponibilidadeExchange(string email, string senha, string smtp, string timeZone) {
            return base.Channel.obterDisponibilidadeExchange(email, senha, smtp, timeZone);
        }
        
        public System.Threading.Tasks.Task<Impeto.Framework.Exchange.Models.Status> obterDisponibilidadeExchangeAsync(string email, string senha, string smtp, string timeZone) {
            return base.Channel.obterDisponibilidadeExchangeAsync(email, senha, smtp, timeZone);
        }
        
        public Microsoft.Exchange.WebServices.Data.EmailAddress[] getBuildingRoomList(string email, string senha) {
            return base.Channel.getBuildingRoomList(email, senha);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Exchange.WebServices.Data.EmailAddress[]> getBuildingRoomListAsync(string email, string senha) {
            return base.Channel.getBuildingRoomListAsync(email, senha);
        }
        
        public Microsoft.Exchange.WebServices.Data.EmailAddress[] getRooms(string email, string senha, string smtpBuildingRoom) {
            return base.Channel.getRooms(email, senha, smtpBuildingRoom);
        }
        
        public System.Threading.Tasks.Task<Microsoft.Exchange.WebServices.Data.EmailAddress[]> getRoomsAsync(string email, string senha, string smtpBuildingRoom) {
            return base.Channel.getRoomsAsync(email, senha, smtpBuildingRoom);
        }
    }
}
