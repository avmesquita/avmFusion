// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace ArduinoAPI.Models
{
    public partial class SalaDeReuniao
    {
        private DateTimeOffset? _dataAtualizacao;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? DataAtualizacao
        {
            get { return this._dataAtualizacao; }
            set { this._dataAtualizacao = value; }
        }
        
        private bool? _hasPeople;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public bool? HasPeople
        {
            get { return this._hasPeople; }
            set { this._hasPeople = value; }
        }
        
        private int? _idCliente;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? IdCliente
        {
            get { return this._idCliente; }
            set { this._idCliente = value; }
        }
        
        private string _smtp;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Smtp
        {
            get { return this._smtp; }
            set { this._smtp = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the SalaDeReuniao class.
        /// </summary>
        public SalaDeReuniao()
        {
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken dataAtualizacaoValue = inputObject["DataAtualizacao"];
                if (dataAtualizacaoValue != null && dataAtualizacaoValue.Type != JTokenType.Null)
                {
                    this.DataAtualizacao = ((DateTimeOffset)dataAtualizacaoValue);
                }
                JToken hasPeopleValue = inputObject["HasPeople"];
                if (hasPeopleValue != null && hasPeopleValue.Type != JTokenType.Null)
                {
                    this.HasPeople = ((bool)hasPeopleValue);
                }
                JToken idClienteValue = inputObject["IdCliente"];
                if (idClienteValue != null && idClienteValue.Type != JTokenType.Null)
                {
                    this.IdCliente = ((int)idClienteValue);
                }
                JToken smtpValue = inputObject["Smtp"];
                if (smtpValue != null && smtpValue.Type != JTokenType.Null)
                {
                    this.Smtp = ((string)smtpValue);
                }
            }
        }
    }
}
